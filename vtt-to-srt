#!/bin/sh

print_usage(){
    printf '%s FILE...\n' "$(basename "${0}")"
}

if [ -z "${1}" ]
then
    print_usage
    exit 0
fi

while [ -n "${1}" ]
do
    vtt="${1}"

    shift

    extension="${vtt##*.}"

    if [ ! "${extension}" = "vtt" ]
    then
        printf 'Skipping %s.\n' "${vtt}" >&2
        continue
    fi

    filename="${vtt%.*}"
    srt="${filename}.srt"

    cp -f "${vtt}" "${srt}"

    gawk -i inplace '
        BEGIN { var="^([0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3} --> [0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3}).*"}
        match($0,var,groups) {
            printf "%d\n",++count
            sub(var,groups[1])
            gsub("\\.",",")
            p = 1
        }
        p
        /^$/ { p = 0 }
    ' "${srt}"

    gawk -i inplace '
        BEGIN { p1="</?c[^>]*>"; p2="<[0-9.:]+>" }
        { gsub(p1,""); gsub(p2,""); print $0 }
    ' "${srt}"

    # https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API
    # Cue payloads require characters such as '>' and '&' to be escaped
    #   with XML sequences: &gt; and &amp; respectively
    recode -d utf-8..html "${srt}"
    recode html..utf-8 "${srt}"
done
